<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dasbor Registrasi</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script>
        // Konfigurasi Tailwind untuk mode gelap
        tailwind.config = {
            darkMode: 'class',
        }
    </script>
    <style>
        body { 
            font-family: 'Inter', sans-serif; 
            background-color: #f3f4f6; /* bg-gray-100 */
            transition: background-color 0.3s, color 0.3s;
        }
        /* Konfigurasi dasar mode gelap */
        .dark body {
            background-color: #0f172a; /* bg-slate-900 */
        }
        .spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            width: 36px;
            height: 36px;
            border-radius: 50%;
            border-left-color: #1390d0; /* Custom Blue */
            animation: spin 1s ease infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* Toast Notification */
        #toast-container {
            position: fixed;
            top: 1.25rem;
            right: 1.25rem;
            z-index: 9999;
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }
        .toast {
            display: flex;
            align-items: center;
            padding: 1rem;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            opacity: 0;
            transform: translateX(100%);
            transition: all 0.3s ease-in-out;
        }
        .toast.show {
            opacity: 1;
            transform: translateX(0);
        }
        .toast-success { background-color: #dcfce7; color: #166534; border-left: 4px solid #22c55e; }
        .toast-error { background-color: #fee2e2; color: #991b1b; border-left: 4px solid #ef4444; }

        /* Sortable table header */
        .sortable { cursor: pointer; user-select: none; }
        .sortable:hover { background-color: #1075b0; }
        
        /* Responsive adjustments */
        @media (max-width: 1024px) {
            .responsive-table thead { display: none; }
            .responsive-table tr {
                display: block; margin-bottom: 1rem; border-radius: 0.75rem;
                border: 1px solid #e5e7eb; background-color: #ffffff;
                box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); padding: 0.5rem 0;
            }
            .dark .responsive-table tr { border-color: #334155; background-color: #1e293b; }
            .responsive-table td {
                display: flex; justify-content: space-between; align-items: center;
                text-align: right; padding: 0.75rem 1rem; /* Reduced horizontal padding for mobile */
                border-bottom: 1px solid #f3f4f6;
            }
            .dark .responsive-table td { border-bottom-color: #334155; }
            .responsive-table td:last-child { border-bottom: 0; }
            .responsive-table td::before {
                content: attr(data-label); font-weight: 500; text-align: left;
                margin-right: 1rem; color: #6b7280; flex-shrink: 0;
            }
            .dark .responsive-table td::before { color: #94a3b8; }
            .responsive-table td .truncate, .responsive-table td .cell-content-stacked { 
                white-space: normal; 
                overflow: hidden;
                text-overflow: clip;
                word-break: break-word; /* Allow long words to break */
                flex-grow: 1;
            }
            
            .responsive-table td .cell-content-stacked {
                display: flex;
                flex-direction: column;
                align-items: flex-end;
            }

            .responsive-table td.action-cell {
                justify-content: center; 
                padding-top: 1rem;
                padding-bottom: 0.5rem;
            }
            .responsive-table td.action-cell::before { display: none; }
        }
    </style>
</head>
<body class="text-gray-800 dark:text-slate-200">

    <div id="toast-container"></div>

    <!-- Modals (Edit, Delete, KTP) -->
    <div id="edit-modal" class="fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center hidden z-50 p-4 overflow-y-auto">
        <div class="bg-white dark:bg-slate-800 rounded-lg shadow-xl p-6 max-w-2xl w-full m-auto">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-6">Edit Data Pelanggan</h3>
            <form id="edit-form" class="space-y-4">
                <input type="hidden" id="edit-original-nik">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label for="edit-nama" class="block text-sm font-medium text-gray-600 dark:text-slate-300">Nama</label>
                        <input type="text" id="edit-nama" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:outline-none focus:ring-[#1390d0] focus:border-[#1390d0] text-gray-900 dark:text-slate-100">
                    </div>
                    <div>
                        <label for="edit-nik" class="block text-sm font-medium text-gray-600 dark:text-slate-300">NIK</label>
                        <input type="text" id="edit-nik" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:outline-none focus:ring-[#1390d0] focus:border-[#1390d0] text-gray-900 dark:text-slate-100">
                    </div>
                    <div>
                        <label for="edit-tgl_lahir" class="block text-sm font-medium text-gray-600 dark:text-slate-300">Tanggal Lahir</label>
                        <input type="text" id="edit-tgl_lahir" placeholder="DD-MM-YYYY" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:outline-none focus:ring-[#1390d0] focus:border-[#1390d0] text-gray-900 dark:text-slate-100">
                    </div>
                    <div>
                        <label for="edit-whatsapp" class="block text-sm font-medium text-gray-600 dark:text-slate-300">No. WhatsApp</label>
                        <input type="tel" id="edit-whatsapp" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:outline-none focus:ring-[#1390d0] focus:border-[#1390d0] text-gray-900 dark:text-slate-100">
                    </div>
                    <div class="md:col-span-2">
                        <label for="edit-email" class="block text-sm font-medium text-gray-600 dark:text-slate-300">Email</label>
                        <input type="email" id="edit-email" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:outline-none focus:ring-[#1390d0] focus:border-[#1390d0] text-gray-900 dark:text-slate-100">
                    </div>
                    <div class="md:col-span-2">
                        <label for="edit-alamat" class="block text-sm font-medium text-gray-600 dark:text-slate-300">Alamat</label>
                        <textarea id="edit-alamat" rows="2" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:outline-none focus:ring-[#1390d0] focus:border-[#1390d0] text-gray-900 dark:text-slate-100"></textarea>
                    </div>
                     <div>
                        <label for="edit-paket_layanan" class="block text-sm font-medium text-gray-600 dark:text-slate-300">Paket Layanan</label>
                        <input type="text" id="edit-paket_layanan" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:outline-none focus:ring-[#1390d0] focus:border-[#1390d0] text-gray-900 dark:text-slate-100">
                    </div>
                    <div>
                        <label for="edit-catatan" class="block text-sm font-medium text-gray-600 dark:text-slate-300">Catatan</label>
                        <input type="text" id="edit-catatan" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:outline-none focus:ring-[#1390d0] focus:border-[#1390d0] text-gray-900 dark:text-slate-100">
                    </div>
                </div>
                <div class="pt-4 flex justify-end space-x-3">
                    <button type="button" id="cancel-edit-btn" class="px-4 py-2 bg-gray-200 dark:bg-slate-600 text-gray-800 dark:text-slate-200 rounded-md hover:bg-gray-300 dark:hover:bg-slate-500 transition">Batal</button>
                    <button type="submit" id="submit-edit-btn" class="flex items-center justify-center px-4 py-2 bg-[#1390d0] text-white font-semibold rounded-md hover:bg-[#1075b0] transition shadow-sm w-40">
                        <span class="btn-text">Simpan</span>
                        <svg class="animate-spin h-5 w-5 text-white hidden btn-spinner" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>
                    </button>
                </div>
            </form>
        </div>
    </div>
    <div id="delete-modal" class="fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center hidden z-50 p-4"></div>
    <div id="ktp-modal" class="fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center hidden z-50 p-4"></div>

    <main class="container mx-auto p-2 sm:p-4 lg:p-8">
        <div class="bg-white dark:bg-slate-800 rounded-xl shadow-lg ring-1 ring-black/5 dark:ring-white/10 p-4 sm:p-6">
            <!-- Judul Aplikasi -->
            <h1 class="text-2xl font-bold text-[#1390d0] mb-6">Data Registrasi Internet</h1>
            
            <!-- Kontrol Utama -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div class="relative w-full">
                    <input type="text" id="search-input" placeholder="Cari di semua kolom..." class="w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-slate-600 rounded-lg bg-white dark:bg-slate-700 text-gray-900 dark:text-slate-100 placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#1390d0] transition">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <svg class="w-5 h-5 text-gray-400 dark:text-slate-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z" clip-rule="evenodd" /></svg>
                    </div>
                </div>
                <div class="flex items-center justify-end gap-3">
                    <button id="theme-toggle-btn" title="Ganti Tema" class="p-2 text-gray-500 dark:text-slate-400 hover:text-[#1390d0] hover:bg-gray-100 dark:hover:bg-slate-700 rounded-lg transition-colors">
                        <svg id="theme-toggle-dark-icon" class="w-6 h-6 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg>
                        <svg id="theme-toggle-light-icon" class="w-6 h-6 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>
                    </button>
                    <a href="https://registrasi-internet.github.io/s-form.html" target="_blank" rel="noopener noreferrer" title="Tambah Data Baru" class="p-2 text-gray-500 dark:text-slate-400 hover:text-[#1390d0] hover:bg-gray-100 dark:hover:bg-slate-700 rounded-lg transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                           <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m6-6H6" />
                        </svg>
                    </a>
                    <button id="filter-toggle-btn" title="Filter Data" class="p-2 text-gray-500 dark:text-slate-400 hover:text-[#1390d0] hover:bg-gray-100 dark:hover:bg-slate-700 rounded-lg transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                           <path stroke-linecap="round" stroke-linejoin="round" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
                        </svg>
                    </button>
                    <button id="export-csv-btn" title="Ekspor ke CSV" class="p-2 text-gray-500 dark:text-slate-400 hover:text-[#1390d0] hover:bg-gray-100 dark:hover:bg-slate-700 rounded-lg transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                           <path stroke-linecap="round" stroke-linejoin="round" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                        </svg>
                    </button>
                    <button id="refresh-btn" title="Muat Ulang Data" class="p-2 text-gray-500 dark:text-slate-400 hover:text-[#1390d0] hover:bg-gray-100 dark:hover:bg-slate-700 rounded-lg transition-colors disabled:cursor-wait">
                        <svg id="refresh-icon" class="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                           <path stroke-linecap="round" stroke-linejoin="round" d="M4 4v5h5m-5 2a9 9 0 0114.13-5.87L20 4m-4 8a9 9 0 01-14.13 5.87L4 20" />
                        </svg>
                        <svg id="refresh-spinner" class="w-6 h-6 animate-spin hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>
                    </button>
                </div>
            </div>
            <!-- Kontrol Filter -->
            <div id="filter-controls" class="hidden bg-gray-50 dark:bg-slate-900/50 p-4 rounded-lg mt-4 mb-4">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label for="filter-service" class="block text-sm font-medium text-gray-600 dark:text-slate-300">Paket Layanan</label>
                        <select id="filter-service" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-slate-600 focus:outline-none focus:ring-[#1390d0] focus:border-[#1390d0] sm:text-sm rounded-md bg-white dark:bg-slate-700 text-gray-900 dark:text-slate-100"></select>
                    </div>
                    <div>
                        <label for="filter-start-date" class="block text-sm font-medium text-gray-600 dark:text-slate-300">Dari Tanggal</label>
                        <input type="date" id="filter-start-date" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm text-gray-900 dark:text-slate-100 dark:[color-scheme:dark]">
                    </div>
                    <div>
                        <label for="filter-end-date" class="block text-sm font-medium text-gray-600 dark:text-slate-300">Sampai Tanggal</label>
                        <input type="date" id="filter-end-date" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm text-gray-900 dark:text-slate-100 dark:[color-scheme:dark]">
                    </div>
                </div>
                <div class="mt-4 flex justify-end">
                    <button id="clear-filters-btn" class="text-sm text-[#1390d0] hover:text-[#1075b0] dark:hover:text-sky-400">Bersihkan Filter</button>
                </div>
            </div>
            <!-- Area Tabel Data -->
            <div class="overflow-x-auto">
                <table class="min-w-full w-full responsive-table">
                    <thead class="bg-[#1390d0]">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-white uppercase tracking-wider sortable" data-sort="nama">Pelanggan</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-white uppercase tracking-wider">Kontak</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-white uppercase tracking-wider">Alamat</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-white uppercase tracking-wider sortable" data-sort="paket_layanan">Layanan</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-white uppercase tracking-wider">Catatan</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-white uppercase tracking-wider sortable" data-sort="created_at">Tgl Registrasi</th>
                            <th scope="col" class="px-6 py-3 text-center text-xs font-semibold text-white uppercase tracking-wider">Aksi</th>
                        </tr>
                    </thead>
                    <tbody id="data-table-body" class="bg-white dark:bg-slate-800 divide-y divide-gray-200 dark:divide-slate-700"></tbody>
                </table>
            </div>
            <!-- Paginasi -->
            <div id="pagination-controls" class="flex items-center justify-between mt-4 px-2">
                <span id="pagination-info" class="text-sm text-gray-500 dark:text-slate-400"></span>
                <div class="flex gap-2">
                    <button id="prev-page-btn" class="px-3 py-1 border border-gray-300 dark:border-slate-600 rounded-md text-sm hover:bg-gray-50 dark:hover:bg-slate-700 disabled:opacity-50 disabled:cursor-not-allowed">Sebelumnya</button>
                    <button id="next-page-btn" class="px-3 py-1 border border-gray-300 dark:border-slate-600 rounded-md text-sm hover:bg-gray-50 dark:hover:bg-slate-700 disabled:opacity-50 disabled:cursor-not-allowed">Berikutnya</button>
                </div>
            </div>
        </div>
    </main>

    <script type="module">
        // --- MANAJEMEN TEMA (MODE GELAP/TERANG) ---
        (() => {
            const themeToggleBtn = document.getElementById('theme-toggle-btn');
            const darkIcon = document.getElementById('theme-toggle-dark-icon');
            const lightIcon = document.getElementById('theme-toggle-light-icon');

            // Fungsi untuk menerapkan tema
            const applyTheme = (theme) => {
                if (theme === 'dark') {
                    document.documentElement.classList.add('dark');
                    darkIcon.classList.remove('hidden');
                    lightIcon.classList.add('hidden');
                } else {
                    document.documentElement.classList.remove('dark');
                    darkIcon.classList.add('hidden');
                    lightIcon.classList.remove('hidden');
                }
                localStorage.setItem('theme', theme);
            };

            // Cek tema saat halaman dimuat
            const savedTheme = localStorage.getItem('theme');
            const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
            
            if (savedTheme) {
                applyTheme(savedTheme);
            } else if (prefersDark) {
                applyTheme('dark');
            } else {
                applyTheme('light');
            }

            // Event listener untuk tombol
            themeToggleBtn.addEventListener('click', () => {
                const currentTheme = document.documentElement.classList.contains('dark') ? 'light' : 'dark';
                applyTheme(currentTheme);
            });
        })();


        document.addEventListener('DOMContentLoaded', main);

        function main() {
            // --- KONFIGURASI ---
            const SUPABASE_URL = "https://chonburtllhuqjqkzujt.supabase.co"; 
            const SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNob25idXJ0bGxodXFqcWt6dWp0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE1MjYwOTcsImV4cCI6MjA2NzEwMjA5N30.aTBKGaht3CwDwH4c9pqwGMb9wToeh8wuHYCrWul7D1c";
            const ROWS_PER_PAGE = 10;

            // --- ELEMEN DOM ---
            const elements = {
                tableBody: document.getElementById('data-table-body'),
                searchInput: document.getElementById('search-input'),
                refreshBtn: document.getElementById('refresh-btn'),
                refreshIcon: document.getElementById('refresh-icon'),
                refreshSpinner: document.getElementById('refresh-spinner'),
                // Modals
                ktpModal: document.getElementById('ktp-modal'),
                editModal: document.getElementById('edit-modal'),
                deleteModal: document.getElementById('delete-modal'),
                // Edit Form
                editForm: document.getElementById('edit-form'),
                cancelEditBtn: document.getElementById('cancel-edit-btn'),
                submitEditBtn: document.getElementById('submit-edit-btn'),
                // Pagination
                paginationControls: document.getElementById('pagination-controls'),
                paginationInfo: document.getElementById('pagination-info'),
                prevPageBtn: document.getElementById('prev-page-btn'),
                nextPageBtn: document.getElementById('next-page-btn'),
                // Filters
                filterToggleBtn: document.getElementById('filter-toggle-btn'),
                filterControls: document.getElementById('filter-controls'),
                filterService: document.getElementById('filter-service'),
                filterStartDate: document.getElementById('filter-start-date'),
                filterEndDate: document.getElementById('filter-end-date'),
                clearFiltersBtn: document.getElementById('clear-filters-btn'),
                // Export
                exportCsvBtn: document.getElementById('export-csv-btn'),
                // Toast
                toastContainer: document.getElementById('toast-container'),
            };

            // --- STATE APLIKASI ---
            let supabase;
            let currentData = []; // Data for current page only
            let recordToDelete = null;
            let debounceTimeout;
            let state = {
                currentPage: 1,
                totalRows: 0,
                sort: { column: 'created_at', order: 'desc' },
                filters: {
                    search: '',
                    service: '',
                    startDate: '',
                    endDate: ''
                }
            };

            // --- INISIALISASI ---
            try {
                supabase = window.supabase.createClient(SUPABASE_URL, SUPABASE_KEY);
                initialize();
            } catch (error) {
                console.error("Initialization Error:", error);
                showToast(`Gagal menginisialisasi: ${error.message}`, 'error');
            }

            function initialize() {
                fetchRegistrations();
                populateServiceFilter();
                setupEventListeners();
            }

            // --- FUNGSI PENGAMBILAN DATA ---
            async function fetchRegistrations() {
                toggleLoading(true);
                const from = (state.currentPage - 1) * ROWS_PER_PAGE;
                const to = from + ROWS_PER_PAGE - 1;

                let query = supabase
                    .from('registrations')
                    .select('*', { count: 'exact' });

                // Apply filters
                if (state.filters.search) {
                    const searchTerm = state.filters.search;
                    query = query.or(
                        `nama.ilike.%${searchTerm}%,` +
                        `nik.ilike.%${searchTerm}%,` +
                        `tgl_lahir.ilike.%${searchTerm}%,` +
                        `whatsapp.ilike.%${searchTerm}%,` +
                        `email.ilike.%${searchTerm}%,` +
                        `alamat.ilike.%${searchTerm}%,` +
                        `paket_layanan.ilike.%${searchTerm}%,` +
                        `catatan.ilike.%${searchTerm}%`
                    );
                }
                if (state.filters.service) {
                    query = query.eq('paket_layanan', state.filters.service);
                }
                if (state.filters.startDate) {
                    query = query.gte('created_at', state.filters.startDate);
                }
                if (state.filters.endDate) {
                    const endDate = new Date(state.filters.endDate);
                    endDate.setDate(endDate.getDate() + 1);
                    query = query.lt('created_at', endDate.toISOString());
                }

                // Apply sorting and pagination
                query = query
                    .order(state.sort.column, { ascending: state.sort.order === 'asc' })
                    .range(from, to);

                try {
                    const { data, error, count } = await query;
                    if (error) throw error;
                    
                    currentData = data;
                    state.totalRows = count;
                    renderTable(currentData);
                    renderPagination();
                } catch (error) {
                    console.error("Fetch Error:", error);
                    showToast(`Gagal memuat data: ${error.message}`, 'error');
                    elements.tableBody.innerHTML = `<tr><td colspan="7" class="text-center p-8 text-red-500 dark:text-red-400">Gagal memuat data.</td></tr>`;
                } finally {
                    toggleLoading(false);
                }
            }
            
            async function populateServiceFilter() {
                const { data, error } = await supabase.from('registrations').select('paket_layanan');
                if (error) {
                    console.error("Error fetching services:", error);
                    return;
                }
                const services = [...new Set(data.map(item => item.paket_layanan).filter(Boolean))];
                elements.filterService.innerHTML = '<option value="">Semua Paket</option>';
                services.sort().forEach(service => {
                    const option = document.createElement('option');
                    option.value = service;
                    option.textContent = service;
                    elements.filterService.appendChild(option);
                });
            }

            // --- FUNGSI RENDER UI ---
            function renderTable(registrations) {
                elements.tableBody.innerHTML = '';
                if (registrations.length === 0) {
                    elements.tableBody.innerHTML = `<tr><td colspan="7" class="text-center p-12"><p class="text-gray-500 dark:text-slate-400">Tidak ada data yang cocok.</p></td></tr>`;
                    return;
                }
                registrations.forEach(reg => {
                    const tr = document.createElement('tr');
                    tr.className = "group hover:bg-gray-50 dark:hover:bg-slate-700";
                    tr.dataset.record = JSON.stringify(reg);

                    const registrationDate = new Date(reg.created_at).toLocaleDateString('id-ID', { day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit' });
                    const whatsappLink = formatWhatsAppLink(reg.whatsapp, reg.nama, reg.paket_layanan);

                    tr.innerHTML = `
                        <td class="px-6 py-4" data-label="Pelanggan"><div class="cell-content-stacked"><div class="text-sm font-medium text-gray-900 dark:text-white">${reg.nama || '-'}</div><div class="text-sm text-gray-500 dark:text-slate-400">${reg.nik || '-'}</div><div class="text-sm text-gray-500 dark:text-slate-400"> ${reg.tgl_lahir || '-'}</div></div></td>
                        <td class="px-6 py-4" data-label="Kontak"><div class="cell-content-stacked space-y-1"><div class="flex items-center gap-2 text-sm text-gray-500 dark:text-slate-400"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4 text-green-500 flex-shrink-0"><path fill-rule="evenodd" d="M12.5 2.5A2.5 2.5 0 0 0 10 0H6a2.5 2.5 0 0 0-2.5 2.5v11A2.5 2.5 0 0 0 6 16h4a2.5 2.5 0 0 0 2.5-2.5v-11ZM10.5 12h-5V4h5v8Z" clip-rule="evenodd" /></svg><a href="${whatsappLink}" target="_blank" rel="noopener noreferrer" class="hover:underline text-green-600 dark:text-green-400" title="Kirim pesan WhatsApp">${reg.whatsapp || '-'}</a></div><div class="flex items-center gap-2 text-sm text-gray-500 dark:text-slate-400"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4 text-slate-400 flex-shrink-0"><path d="M2.5 3A1.5 1.5 0 0 0 1 4.5v7A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5v-7A1.5 1.5 0 0 0 13.5 3h-11ZM2 4.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5v1.269l-5.245 3.497a1.5 1.5 0 0 1-1.51 0L2 5.769V4.5Zm11.5 8h-11a.5.5 0 0 1-.5-.5V6.31l5.022 3.348a2.5 2.5 0 0 0 2.516 0L14 6.31v6.19a.5.5 0 0 1-.5.5Z" /></svg><span>${reg.email || '-'}</span></div></div></td>
                        <td class="px-6 py-4 text-sm text-gray-500 dark:text-slate-400" data-label="Alamat"><div class="max-w-xs whitespace-normal" title="${reg.alamat || ''}">${reg.alamat || '-'}</div></td>
                        <td class="px-6 py-4 text-sm font-medium text-gray-800 dark:text-slate-200" data-label="Layanan">${reg.paket_layanan || '-'}</td>
                        <td class="px-6 py-4 text-sm text-gray-500 dark:text-slate-400" data-label="Catatan"><div class="max-w-xs whitespace-normal" title="${reg.catatan || ''}">${reg.catatan || '-'}</div></td>
                        <td class="px-6 py-4 text-sm text-gray-500 dark:text-slate-400" data-label="Tgl Registrasi">${registrationDate}</td>
                        <td class="px-6 py-4 text-center text-sm font-medium action-cell" data-label="Aksi">
                            <div class="flex items-center justify-center space-x-1">
                                <button class="copy-btn p-2 rounded-full hover:bg-gray-100 dark:hover:bg-slate-700" title="Salin Data">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-[#1390d0]" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                                    </svg>
                                </button>
                                <button class="view-ktp-btn p-2 rounded-full hover:bg-gray-100 dark:hover:bg-slate-700" title="Lihat KTP">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-[#1390d0]" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                    </svg>
                                </button>
                                <button class="edit-btn p-2 rounded-full hover:bg-gray-100 dark:hover:bg-slate-700" title="Edit">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-[#1390d0]" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                    </svg>
                                </button>
                                <button class="delete-btn p-2 rounded-full hover:bg-gray-100 dark:hover:bg-slate-700" title="Hapus">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-[#1390d0]" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                </button>
                            </div>
                        </td>
                    `;
                    elements.tableBody.appendChild(tr);
                });
            }

            function renderPagination() {
                const from = (state.currentPage - 1) * ROWS_PER_PAGE + 1;
                const to = Math.min(from + ROWS_PER_PAGE - 1, state.totalRows);
                elements.paginationInfo.textContent = `Menampilkan ${from}-${to} dari ${state.totalRows} data`;
                elements.prevPageBtn.disabled = state.currentPage === 1;
                elements.nextPageBtn.disabled = to >= state.totalRows;
                elements.paginationControls.classList.toggle('hidden', state.totalRows <= ROWS_PER_PAGE);
            }

            // --- FUNGSI HELPER & AKSI ---
            function toggleLoading(isLoading, button = elements.refreshBtn) {
                button.disabled = isLoading;
                if (button === elements.refreshBtn) {
                    elements.refreshIcon.classList.toggle('hidden', isLoading);
                    elements.refreshSpinner.classList.toggle('hidden', !isLoading);
                } else if (button === elements.submitEditBtn) {
                    button.querySelector('.btn-text').classList.toggle('hidden', isLoading);
                    button.querySelector('.btn-spinner').classList.toggle('hidden', !isLoading);
                }
            }
            
            function showToast(message, type = 'success') {
                const toast = document.createElement('div');
                toast.className = `toast ${type === 'success' ? 'toast-success' : 'toast-error'}`;
                toast.textContent = message;
                elements.toastContainer.appendChild(toast);
                setTimeout(() => {
                    toast.classList.add('show');
                }, 10);
                setTimeout(() => {
                    toast.classList.remove('show');
                    setTimeout(() => toast.remove(), 3000);
                }, 3000);
            }

            function formatWhatsAppLink(number, name, service) {
                if (!number) return '#';
                let cleanedNumber = number.replace(/\D/g, '');
                if (cleanedNumber.startsWith('0')) {
                    cleanedNumber = '62' + cleanedNumber.substring(1);
                }
                const message = `Halo ${name}`;
                const encodedMessage = encodeURIComponent(message);
                return `https://wa.me/${cleanedNumber}?text=${encodedMessage}`;
            }

            function copyRecordToClipboard(record) {
                const textToCopy = [
                    `Nama: ${record.nama || '-'}`,
                    `NIK: ${record.nik || '-'}`,
                    `Tanggal Lahir: ${record.tgl_lahir || '-'}`,
                    `No. WhatsApp: ${record.whatsapp || '-'}`,
                    `Email: ${record.email || '-'}`,
                    `Alamat: ${(record.alamat || '-').replace(/\n/g, ' ')}`,
                    `Paket Layanan: ${record.paket_layanan || '-'}`,
                    `Catatan: ${(record.catatan || '-').replace(/\n/g, ' ')}`,
                    `Tanggal Registrasi: ${new Date(record.created_at).toLocaleString('id-ID')}`
                ].join('\n');

                const textArea = document.createElement("textarea");
                textArea.value = textToCopy;
                textArea.style.position = "fixed";
                textArea.style.top = "-9999px";
                textArea.style.left = "-9999px";
                document.body.appendChild(textArea);
                textArea.select();
                try {
                    document.execCommand('copy');
                    showToast('Data pelanggan berhasil disalin.', 'success');
                } catch (err) {
                    console.error('Gagal menyalin data: ', err);
                    showToast('Gagal menyalin data.', 'error');
                }
                document.body.removeChild(textArea);
            }

            async function handleUpdate(e) {
                e.preventDefault();
                toggleLoading(true, elements.submitEditBtn);
                const originalNik = document.getElementById('edit-original-nik').value;
                const updatedData = {
                    nama: document.getElementById('edit-nama').value, nik: document.getElementById('edit-nik').value,
                    tgl_lahir: document.getElementById('edit-tgl_lahir').value, whatsapp: document.getElementById('edit-whatsapp').value,
                    email: document.getElementById('edit-email').value, alamat: document.getElementById('edit-alamat').value,
                    paket_layanan: document.getElementById('edit-paket_layanan').value, catatan: document.getElementById('edit-catatan').value,
                };

                const { error } = await supabase.from('registrations').update(updatedData).eq('nik', originalNik);
                toggleLoading(false, elements.submitEditBtn);

                if (error) {
                    showToast(`Gagal memperbarui: ${error.message}`, 'error');
                } else {
                    showToast('Data berhasil diperbarui.', 'success');
                    elements.editModal.classList.add('hidden');
                    fetchRegistrations();
                }
            }

            async function handleDelete() {
                if (!recordToDelete) return;
                const { nik } = recordToDelete;
                const { error } = await supabase.from('registrations').delete().eq('nik', nik);

                if (error) {
                    showToast(`Gagal menghapus: ${error.message}`, 'error');
                } else {
                    showToast('Data berhasil dihapus.', 'success');
                    elements.deleteModal.innerHTML = '';
                    elements.deleteModal.classList.add('hidden');
                    recordToDelete = null;
                    fetchRegistrations();
                }
            }
            
            function exportToCSV() {
                const headers = ['Nama', 'NIK', 'Tgl Lahir', 'WhatsApp', 'Email', 'Alamat', 'Paket Layanan', 'Catatan', 'Tgl Registrasi', 'URL KTP'];
                const rows = currentData.map(reg => [ // Use currentData for export
                    `"${(reg.nama || '').replace(/"/g, '""')}"`,
                    `"${(reg.nik || '').replace(/"/g, '""')}"`,
                    `"${(reg.tgl_lahir || '').replace(/"/g, '""')}"`,
                    `"${(reg.whatsapp || '').replace(/"/g, '""')}"`,
                    `"${(reg.email || '').replace(/"/g, '""')}"`,
                    `"${(reg.alamat || '').replace(/"/g, '""')}"`,
                    `"${(reg.paket_layanan || '').replace(/"/g, '""')}"`,
                    `"${(reg.catatan || '').replace(/"/g, '""')}"`,
                    `"${new Date(reg.created_at).toLocaleString('id-ID')}"`,
                    `"${(reg.ktp_image_url || '').replace(/"/g, '""')}"`,
                ]);
                
                const csvContent = "data:text/csv;charset=utf-8," + [headers.join(','), ...rows.map(e => e.join(','))].join('\n');
                const encodedUri = encodeURI(csvContent);
                const link = document.createElement("a");
                link.setAttribute("href", encodedUri);
                link.setAttribute("download", `registrasi_${new Date().toISOString().slice(0,10)}.csv`);
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }

            // --- SETUP EVENT LISTENERS ---
            function setupEventListeners() {
                elements.refreshBtn.addEventListener('click', fetchRegistrations);
                elements.exportCsvBtn.addEventListener('click', exportToCSV);

                // Search with Debounce
                elements.searchInput.addEventListener('input', (e) => {
                    clearTimeout(debounceTimeout);
                    debounceTimeout = setTimeout(() => {
                        state.filters.search = e.target.value;
                        state.currentPage = 1;
                        fetchRegistrations();
                    }, 300);
                });
                
                // Table Actions (Copy, Edit, Delete, View KTP)
                elements.tableBody.addEventListener('click', (e) => {
                    const recordRow = e.target.closest('tr');
                    if (!recordRow || !recordRow.dataset.record) return;
                    const record = JSON.parse(recordRow.dataset.record);
                    if (e.target.closest('.copy-btn')) copyRecordToClipboard(record);
                    if (e.target.closest('.edit-btn')) showModal('edit', record);
                    if (e.target.closest('.delete-btn')) showModal('delete', record);
                    if (e.target.closest('.view-ktp-btn')) showModal('ktp', record);
                });

                // Sorting
                document.querySelectorAll('.sortable').forEach(header => {
                    header.addEventListener('click', () => {
                        const column = header.dataset.sort;
                        if (state.sort.column === column) {
                            state.sort.order = state.sort.order === 'asc' ? 'desc' : 'asc';
                        } else {
                            state.sort.column = column;
                            state.sort.order = 'asc';
                        }
                        fetchRegistrations();
                    });
                });

                // Pagination
                elements.prevPageBtn.addEventListener('click', () => { if (state.currentPage > 1) { state.currentPage--; fetchRegistrations(); } });
                elements.nextPageBtn.addEventListener('click', () => { if (state.currentPage * ROWS_PER_PAGE < state.totalRows) { state.currentPage++; fetchRegistrations(); } });

                // Filters
                elements.filterToggleBtn.addEventListener('click', () => elements.filterControls.classList.toggle('hidden'));
                elements.filterService.addEventListener('change', (e) => { state.filters.service = e.target.value; state.currentPage = 1; fetchRegistrations(); });
                elements.filterStartDate.addEventListener('change', (e) => { state.filters.startDate = e.target.value; state.currentPage = 1; fetchRegistrations(); });
                elements.filterEndDate.addEventListener('change', (e) => { state.filters.endDate = e.target.value; state.currentPage = 1; fetchRegistrations(); });
                elements.clearFiltersBtn.addEventListener('click', () => {
                    elements.filterService.value = '';
                    elements.filterStartDate.value = '';
                    elements.filterEndDate.value = '';
                    state.filters.service = '';
                    state.filters.startDate = '';
                    state.filters.endDate = '';
                    fetchRegistrations();
                });

                // Modal Controls
                elements.editForm.addEventListener('submit', handleUpdate);
                elements.cancelEditBtn.addEventListener('click', () => elements.editModal.classList.add('hidden'));
            }
            
            function showModal(type, record) {
                let modal, content;
                switch (type) {
                    case 'edit':
                        document.getElementById('edit-original-nik').value = record.nik;
                        document.getElementById('edit-nama').value = record.nama || '';
                        document.getElementById('edit-nik').value = record.nik || '';
                        document.getElementById('edit-tgl_lahir').value = record.tgl_lahir || '';
                        document.getElementById('edit-whatsapp').value = record.whatsapp || '';
                        document.getElementById('edit-email').value = record.email || '';
                        document.getElementById('edit-alamat').value = record.alamat || '';
                        document.getElementById('edit-paket_layanan').value = record.paket_layanan || '';
                        document.getElementById('edit-catatan').value = record.catatan || '';
                        elements.editModal.classList.remove('hidden');
                        break;
                    case 'delete':
                        recordToDelete = record;
                        modal = elements.deleteModal;
                        content = `<div class="bg-white dark:bg-slate-800 rounded-lg shadow-xl p-6 max-w-sm w-full text-center"><div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 dark:bg-red-800/50"><svg class="h-6 w-6 text-red-600 dark:text-red-400" stroke="currentColor" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"/></svg></div><h3 class="text-lg font-medium text-gray-900 dark:text-white mt-5">Hapus Data</h3><p class="mt-2 text-sm text-gray-500 dark:text-slate-400">Yakin ingin menghapus data untuk <strong>${record.nama}</strong>? Tindakan ini tidak dapat dibatalkan.</p><div class="mt-6 flex justify-center space-x-3"><button class="modal-cancel-btn px-4 py-2 bg-gray-200 dark:bg-slate-600 text-gray-800 dark:text-slate-200 rounded-md hover:bg-gray-300 dark:hover:bg-slate-500 transition">Batal</button><button class="modal-confirm-delete-btn px-4 py-2 bg-red-600 text-white font-semibold rounded-md hover:bg-red-700 transition">Ya, Hapus</button></div></div>`;
                        modal.innerHTML = content;
                        modal.classList.remove('hidden');
                        modal.querySelector('.modal-cancel-btn').addEventListener('click', () => modal.classList.add('hidden'));
                        modal.querySelector('.modal-confirm-delete-btn').addEventListener('click', handleDelete);
                        break;
                    case 'ktp':
                        modal = elements.ktpModal;
                        content = `<div class="bg-white dark:bg-slate-800 rounded-lg shadow-xl p-6 max-w-lg w-full relative"><button class="modal-cancel-btn absolute top-3 right-3 text-gray-400 hover:text-gray-800 dark:hover:text-white"><svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg></button><h3 class="text-xl font-bold mb-4 text-gray-900 dark:text-white">KTP: ${record.nama}</h3><div class="w-full h-64 bg-gray-200 dark:bg-slate-700 rounded-md flex items-center justify-center"><img src="${record.ktp_image_url || ''}" class="max-w-full max-h-full object-contain" onerror="this.parentElement.innerHTML = '<span class=\'text-gray-500 dark:text-slate-400\'>Gambar Tidak Tersedia</span>';"></div></div>`;
                        modal.innerHTML = content;
                        modal.classList.remove('hidden');
                        modal.querySelector('.modal-cancel-btn').addEventListener('click', () => modal.classList.add('hidden'));
                        break;
                }
            }
        }
    </script>
</body>
</html>
